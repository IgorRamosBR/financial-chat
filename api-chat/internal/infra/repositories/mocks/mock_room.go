// Code generated by MockGen. DO NOT EDIT.
// Source: room.go

// Package mocks is a generated GoMock package.
package mocks

import (
	models "api-chat/internal/domain/models"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRoomRepository is a mock of RoomRepository interface.
type MockRoomRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRoomRepositoryMockRecorder
}

// MockRoomRepositoryMockRecorder is the mock recorder for MockRoomRepository.
type MockRoomRepositoryMockRecorder struct {
	mock *MockRoomRepository
}

// NewMockRoomRepository creates a new mock instance.
func NewMockRoomRepository(ctrl *gomock.Controller) *MockRoomRepository {
	mock := &MockRoomRepository{ctrl: ctrl}
	mock.recorder = &MockRoomRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRoomRepository) EXPECT() *MockRoomRepositoryMockRecorder {
	return m.recorder
}

// SaveRoom mocks base method.
func (m *MockRoomRepository) SaveRoom(ctx context.Context, user *models.Room) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveRoom", ctx, user)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveRoom indicates an expected call of SaveRoom.
func (mr *MockRoomRepositoryMockRecorder) SaveRoom(ctx, user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveRoom", reflect.TypeOf((*MockRoomRepository)(nil).SaveRoom), ctx, user)
}
